% Mass of the Cart = 900 gm
M = 0.9; % in Kg
% Mass of the Pendulum = 905 gm
m = 0.905; % in Kg
% Length of Pendulum = 905 cm
Lp = 0.905; % in m
% Length of pendulum to Center of Gravity = 23.5 cm
l = 0.235; % in m
% Moment of Inertia of Pendulum = 24.704 gm-m^2
I = 0.24704; % in Kg.m^2
% Radius of Pulley = 2.3 cm
r = 0.023; % in m
% Time Constant of Motor = 0.002 second
tau = 0.002; % in seconds
% Gain of Feedback = 6/pi V/rad/sec
Kf = 1.909; % in V/rad/sec
% Gain of Motor = 48.782 rad/sec/V
Km =48.782; % in rad/sec/V
% Friction of the Cart = 0.000 N/m/sec
b = 0; % in N/m/sec
% Acceleration due to Gravity = 9.8 m/sec^2
g = 9.8; % in m/sec^2
save data_ip
% ip_data is a MAT File (MATLAB specific binary file),
% with variables I, Kf, Km, Lp, M, b, g, l, m, r, tau
clear all
close all
clc
load data_ip % load your system parameters, generated by running „data_ip.m“
Kp = 1 / ((M + m) * g);
K = Kf * Kp * Km * r * (M + m);
Ap = sqrt ((M + m) * m * g * l / ((M + m)*(I + (m * (l ^ 2)))- ((m * l)^2)));
% G1(s) = Theta(s) / U(s)
% theta represents a small angle from the vertical upward direction,
% u represents the input (impulse) force on the cart by pulley chain mechanism.
num_Th_U = [0 0 Kp];
den_Th_U = [Ap^(-2) 0 -1];
G1 = tf (num_Th_U, den_Th_U);
% G2(s) = U(s) / E(s)
% u represents the input force on the cart by the pulley chain mechanism,
% e represents the input to the motor driving pulley-chain mechanism.
num_U_E = [((Km * (M + m))*r) 0];
den_U_E = [tau 1];
G2 = tf (num_U_E, den_U_E);
disp ' '
% G(s) = Theta(s) / E(s)
% Open Loop Transfer Function (Without Feedback)
disp 'Forward Path Transfer Function of Inverted Pendulum System is:'
G = series (G2, G1)
sys_closedloop= feedback(G, Kf,+1)
pzmap(sys_closedloop)
impulse(sys_closedloop)
time=0:0.01:0.5;
impulse(sys_closedloop,time)
step(G)
rlocus(G)
rlocus(sys_closedloop)
sisotool
clear all
close all
clc
load func_ip_uc
% C(s) = ( Kd * s^2 + Kp * s + Ki ) / s
% PID Controller to reshape the root locus
Kp = 20;
Ki = 100;
Kd = 1;
Kc = 80;
num_PID = Kc * [Kd Kp Ki];
den_PID = [1 0];
disp ('The transfer function of the PID Controller is:')
PID = tf (num_PID, den_PID)
% G_comp(s) = PID(s) * G(s)
% Overall Forward Transfer Function.
num_Gcomp = conv (num_PID, num_G);
den_Gcomp = conv (den_PID, den_G);
G_comp = series (PID, G);
% Open Loop Transfer Function of the Compensated System
% G_comp_H(s) = G_comp(s) * H(s)
G_comp_H = series (G_comp, H);
% Closed-Loop Transfer Function of the Compensated System
% Gc_comp
disp 'Closed Loop Transfer Function of the Compensated IP System is:'
Gc_comp = feedback (G_comp, H)
% DC Gain
disp ('The DC Gain of the Closed Loop Compensated IP System is:')
disp (dcgain (Gc_comp))
save func_ip_comp
% func_ip_comp is a MAT File (MATLAB specific binary file),
% with variables G_comp, G_comp_H, Gc_comp, PID
clear all
close all
clc
load func_ip_comp
% Locations of Poles and Zeroes of Open-Loop Compensated Transfer Function in
Complex Plane
figure
pzmap (G_comp_H)
axis ([-15 10 -1 1])
title ('Pole-Zero Map of Open-Loop Compensated Inverted Pendulum System')
% Root-Locus Plot of Compensated Inverted Pendulum System
figure
rlocus (G_comp_H)
sgrid (0.76,35)
title ('Root Locus of Compensated Inverted Pendulum System')
% Locations of Poles and Zeroes of Closed-Loop Transfer Function in Complex
Plane
figure
pzmap (Gc_comp)
title ('Pole-Zero Map of Closed-Loop Compensated Inverted Pendulum System')
% Impulse Response of Compensated Inverted Pendulum System
figure
impulse (Gc_comp)
title ('Impulse Response of Closed-Loop Compensated Inverted Pendulum System')
% Step Response of Compensated Inverted Pendulum System
figure
step (Gc_comp)
title ('Step Response of Closed-Loop Compensated Inverted Pendulum System') 
